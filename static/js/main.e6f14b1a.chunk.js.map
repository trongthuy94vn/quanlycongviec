{"version":3,"sources":["context/TaskContext.js","constants/ActionTypes.js","actions/tasks.js","components/Task/Form/EditTaskForm.js","components/Task/Form/AddTaskForm.js","components/Task/Form/Form.js","components/Task/Button.js","components/Task/Item.js","components/Task/List.js","components/Task/Table.js","components/Task/Controls/Search.js","components/Task/Controls/Sort.js","components/Task/Controls/index.js","reducers/tasks.js","App.js","fontawesome.js","serviceWorker.js","index.js"],"names":["TasksContext","createContext","TasksContextProvider","children","props","Provider","ADD_TASK","DELETE_TASK","EDIT_TASK","UPDATE_STATUS","A_TO_Z","Z_TO_A","TOGGLE_FORM","CLOSE_FORM","EDIT_FORM","toggleForm","type","closeForm","editForm","EditTaskForm","useContext","dispatchTasks","currentTask","useState","task","tasks","setTasks","status","setStatus","useEffect","Form","onSubmit","e","preventDefault","editTasks","id","Group","controlId","Label","Control","required","value","onChange","target","as","JSON","parse","className","Button","variant","icon","onClick","AddTaskForm","setTask","addTask","TaskForm","isEdit","state","Col","xl","sm","md","lg","Alert","Heading","TaskButton","size","disabled","TaskItem","index","onEditTask","handleUpdateStatus","taskId","TaskList","tasksList","map","key","TaskTable","setValue","filteredTask","filter","toLowerCase","includes","Table","bordered","hover","TaskSearchControl","onSearchTask","keyword","setKeyword","InputGroup","FormControl","placeholder","aria-label","aria-describedby","Append","TaskSortControl","isCheck","setIsCheck","DropdownButton","title","data-toggle","Dropdown","Item","TaskControl","Row","Search","Sort","uuid","initialState","isShow","localStorage","getItem","tasksReducer","action","AZsortState","sort","a","b","localeCompare","ZAsortState","App","useReducer","setCurrentTask","setItem","stringify","Container","xs","library","add","faPencilAlt","faSearch","faPlus","faTimes","faTimesCircle","faSortAlphaUp","faSortAlphaDown","faTrashAlt","faCheck","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iTAEaA,EAAeC,wBAAc,MAE3B,SAASC,EAAT,GAAuD,IAAvBC,EAAsB,EAAtBA,SAAaC,EAAS,4BACnE,OAAO,kBAACJ,EAAaK,SAAaD,EAAQD,GCHrC,IAAMG,EAAW,WACXC,EAAc,cACdC,EAAY,YAGZC,EAAgB,gBAIhBC,EAAS,SACTC,EAAS,SACTC,EAAc,cACdC,EAAa,aACbC,EAAY,YC0BZC,EAAa,WACxB,MAAO,CACLC,KAAMJ,IAIGK,EAAY,WACvB,MAAO,CACLD,KAAMH,IAIGK,EAAW,WACtB,MAAO,CACLF,KAAMF,ICiBKK,EAjEM,WAAO,IAAD,EACaC,qBAAWpB,GAAzCqB,EADiB,EACjBA,cAAcC,EADG,EACHA,YADG,EAECC,mBAASD,EAAYE,MAFtB,mBAElBC,EAFkB,KAEXC,EAFW,OAGGH,mBAASD,EAAYK,QAHxB,mBAGlBA,EAHkB,KAGVC,EAHU,KAkBzBC,qBAAU,WACRH,EAASJ,EAAYE,MACrBI,EAAUN,EAAYK,UACrB,CAACL,EAAYK,OAAQL,EAAYE,OAOpC,OACE,kBAACM,EAAA,EAAD,CAAMC,SAxBa,SAAAC,GACnB,GAAIP,EAAO,CACTO,EAAEC,iBACF,IAAMC,EAAY,CAChBV,KAAMC,EACNE,OAAQA,EACRQ,GAAIb,EAAYa,IAElBd,EDQG,CACLL,KAAMR,EACNgB,KCVyBU,OAiBvB,kBAACJ,EAAA,EAAKM,MAAN,CAAYC,UAAU,kBACpB,kBAACP,EAAA,EAAKQ,MAAN,iBACA,kBAACR,EAAA,EAAKS,QAAN,CACEvB,KAAK,OACLwB,UAAQ,EACRC,MAAOhB,EACPiB,SAAU,SAAAV,GAAC,OAAIN,EAASM,EAAEW,OAAOF,WAGrC,kBAACX,EAAA,EAAKM,MAAN,KACE,kBAACN,EAAA,EAAKQ,MAAN,6BACA,kBAACR,EAAA,EAAKS,QAAN,CACEK,GAAG,SACHJ,UAAQ,EACRC,MAAOd,EACPe,SAAU,SAAAV,GAAC,OAAIJ,EAAUiB,KAAKC,MAAMd,EAAEW,OAAOF,UAE7C,4BAAQA,MAAM,QAAd,qBACA,4BAAQA,MAAM,SAAd,aAGJ,6BACA,yBAAKM,UAAU,eACb,kBAACC,EAAA,EAAD,CAAQhC,KAAK,SAASiC,QAAQ,WAC5B,kBAAC,IAAD,CAAiBC,KAAK,SADxB,sBADF,OAKE,kBAACF,EAAA,EAAD,CAAQhC,KAAK,SAASiC,QAAQ,SAASE,QAlCzB,WAClBzB,EAASJ,EAAYE,MACrBI,EAAUN,EAAYK,QACtBN,EAAcJ,OAgCR,kBAAC,IAAD,CAAiBiC,KAAK,UADxB,wBCDOE,EAxDK,WAAO,IAAD,EACA7B,mBAAS,IADT,mBACjBC,EADiB,KACX6B,EADW,OAEI9B,oBAAS,GAFb,mBAEjBI,EAFiB,KAETC,EAFS,KAGhBP,EAAkBD,qBAAWpB,GAA7BqB,cAgBR,OACE,kBAACS,EAAA,EAAD,CAAMC,SAfa,SAAAC,GACfR,IACFQ,EAAEC,iBACFZ,EFHiB,SAACG,EAAMG,GAC5B,MAAO,CACLX,KAAMV,EACNkB,KAAMA,EACNG,OAAQA,GEDQ2B,CAAQ9B,EAAMG,IAC5B0B,EAAQ,IACRzB,GAAU,MAWV,kBAACE,EAAA,EAAKM,MAAN,CAAYC,UAAU,kBACpB,kBAACP,EAAA,EAAKQ,MAAN,iBACA,kBAACR,EAAA,EAAKS,QAAN,CACEvB,KAAK,OACLwB,UAAQ,EACRC,MAAOjB,EACPkB,SAAU,SAAAV,GAAC,OAAIqB,EAAQrB,EAAEW,OAAOF,WAGpC,kBAACX,EAAA,EAAKM,MAAN,KACE,kBAACN,EAAA,EAAKQ,MAAN,6BACA,kBAACR,EAAA,EAAKS,QAAN,CACEK,GAAG,SACHJ,UAAQ,EACRC,MAAOd,EACPe,SAAU,SAAAV,GAAC,OAAIJ,EAAUiB,KAAKC,MAAMd,EAAEW,OAAOF,UAE7C,4BAAQA,MAAM,QAAd,qBACA,4BAAQA,MAAM,SAAd,aAGJ,6BACA,yBAAKM,UAAU,eACb,kBAACC,EAAA,EAAD,CAAQhC,KAAK,SAASiC,QAAQ,WAC5B,kBAAC,IAAD,CAAiBC,KAAK,SADxB,sBADF,OAKE,kBAACF,EAAA,EAAD,CAAQhC,KAAK,SAASiC,QAAQ,SAASE,QAlCzB,WAClBE,EAAQ,IACRzB,GAAU,KAiCJ,kBAAC,IAAD,CAAiBsB,KAAK,UADxB,wBCjBOK,EA5BE,WAAO,IAAD,EACYnC,qBAAWpB,GAApCqB,EADa,EACbA,cACDmC,EAFc,EACEC,MAChBD,OAKP,OACE,kBAACE,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIf,UAAU,OACzC,6BACE,kBAACgB,EAAA,EAAD,CAAOd,QAAQ,WACb,kBAACc,EAAA,EAAMC,QAAP,CAAepB,GAAG,MACfY,EAAS,6BAAkB,4BAC5B,8BACE,kBAAC,IAAD,CACEN,KAAK,eACLH,UAAU,cACVI,QAbU,WACtB9B,EAAcJ,YAkBXuC,EAAS,kBAAC,EAAD,MAAmB,kBAAC,EAAD,Q,QCRpBS,EAtBI,SAAC,GAMb,IALL9D,EAKI,EALJA,SACAqD,EAII,EAJJA,OAII,IAHJU,YAGI,MAHG,KAGH,MAFJjB,eAEI,MAFM,UAEN,EADD7C,EACC,sDACJ,OAAIoD,EAEA,kBAACR,EAAA,EAAD,eAAQC,QAASA,EAASkB,UAAQ,EAACD,KAAMA,GAAU9D,GAChDD,GAML,kBAAC6C,EAAA,EAAD,eAAQC,QAASA,EAASiB,KAAMA,GAAU9D,GACvCD,ICuCQiE,EAnDE,SAAC,GAAqB,IAAnB5C,EAAkB,EAAlBA,KAAM6C,EAAY,EAAZA,MAAY,EACSjD,qBAAWpB,GAAhDqB,EAD4B,EAC5BA,cAAeiD,EADa,EACbA,WAAYb,EADC,EACDA,MAM7Bc,EAAqB,WLmBD,IAAAC,EKlBxBnD,GLkBwBmD,EKlBGhD,EAAKW,GLmB3B,CACLnB,KAAMP,EACN0B,GAAIqC,MKdN,OACE,4BACE,8BAAOH,GACP,4BAAK7C,EAAKA,MACV,wBAAIuB,UAAU,eACXvB,EAAKG,OACJ,kBAAC,EAAD,CACEsB,QAAQ,SACRO,OAAQC,EAAMD,OACdL,QAASoB,GAHX,qBAQA,kBAAC,EAAD,CACEtB,QAAQ,UACRO,OAAQC,EAAMD,OACdL,QAASoB,GAHX,YASJ,wBAAIxB,UAAU,eACZ,kBAAC,EAAD,CAAYE,QAAQ,UAAUE,QA5Bb,WACrBmB,EAAW9C,IA2BgD0C,KAAK,MAC1D,kBAAC,IAAD,CAAiBhB,KAAK,eADxB,aADF,OAKE,kBAAC,EAAD,CAAYD,QAAQ,SAASE,QAxCV,WLSD,IAAAqB,EKRtBnD,GLQsBmD,EKRGhD,EAAKW,GLSzB,CACLnB,KAAMT,EACN4B,GAAIqC,MK4BwDN,KAAK,MAC3D,kBAAC,IAAD,CAAiBhB,KAAM,CAAC,MAAO,eADjC,cCrCOuB,EAVE,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAClB,OACE,oCACGA,EAAUC,KAAI,SAACnD,EAAM6C,GAAP,OACb,kBAAC,EAAD,CAAUO,IAAKpD,EAAKW,GAAIkC,MAAOA,EAAO7C,KAAMA,SC+DrCqD,EAlEG,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,UAAgB,EACPnD,mBAAS,OADF,mBAC5BI,EAD4B,KACpBC,EADoB,OAETL,mBAAS,IAFA,mBAE5BkB,EAF4B,KAErBqC,EAFqB,KAI/BC,EAAeL,EAoBnB,OAlBIjC,IACFsC,EAAeA,EAAaC,QAAO,SAAAxD,GACjC,OAAOA,EAAKA,KAAKyD,cAAcC,SAASzC,EAAMwC,mBAGlDF,EAAeA,EAAaC,QAAO,SAAAxD,GACjC,MAAe,QAAXG,MAGW,WAAXA,IAAuBH,EAAKG,SAGjB,SAAXA,IAAsBH,EAAKG,WAO/B,kBAACwD,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,GACnB,+BACE,4BACE,wBAAItC,UAAU,eAAd,OACA,wBAAIA,UAAU,eAAd,UACA,wBAAIA,UAAU,eAAd,sBACA,wBAAIA,UAAU,eAAd,4BAGJ,+BACE,4BACE,6BACA,4BACE,2BACE/B,KAAK,OACLyB,MAAOA,EACPC,SAAU,SAAAV,GAAC,OAAI8C,EAAS9C,EAAEW,OAAOF,QACjCM,UAAU,kBAGd,4BACE,kBAACjB,EAAA,EAAKM,MAAN,KACE,kBAACN,EAAA,EAAKS,QAAN,CACEK,GAAG,SACHH,MAAOd,EACPe,SAAU,SAAAV,GAAC,OAAIJ,EAAUI,EAAEW,OAAOF,SAElC,4BAAQA,MAAM,OAAd,oBACA,4BAAQA,MAAM,UAAd,qBACA,4BAAQA,MAAM,QAAd,cAIN,8BAEF,kBAAC,EAAD,CAAUiC,UAAWK,O,gBClCdO,EAzBW,WAAO,IACvBC,EAAiBnE,qBAAWpB,GAA5BuF,aADsB,EAEAhE,mBAAS,IAFT,mBAEvBiE,EAFuB,KAEdC,EAFc,KAO9B,OACE,kBAACC,EAAA,EAAD,CAAY3C,UAAU,QACpB,kBAAC4C,EAAA,EAAD,CACEC,YAAY,+BACZC,aAAW,uBACXC,mBAAiB,eACjBrD,MAAO+C,EACP9C,SAAU,SAAAV,GAAC,OAAIyD,EAAWzD,EAAEW,OAAOF,UAErC,kBAACiD,EAAA,EAAWK,OAAZ,KACE,kBAAC/C,EAAA,EAAD,CAAQC,QAAQ,UAAUjC,KAAK,SAASmC,QAbrB,WACvBoC,EAAaC,KAaP,kBAAC,IAAD,CAAiBtC,KAAK,WADxB,c,gBCgBO8C,EAhCS,WAAO,IACrB3E,EAAkBD,qBAAWpB,GAA7BqB,cADoB,EAEEE,mBAAS,MAFX,mBAErB0E,EAFqB,KAEZC,EAFY,KAc5B,OACE,kBAACC,EAAA,EAAD,CACEhE,GAAG,wBACHiE,MAAM,oBACNC,cAAY,YAEZ,kBAACC,EAAA,EAASC,KAAV,CAAepD,QAhBD,WAChB9B,ETgDK,CACLL,KAAMN,IShDNwF,GAAW,KAeP,kBAAC,IAAD,CAAiBhD,KAAK,oBADxB,cACqD,KACtC,IAAZ+C,GAAoB,kBAAC,IAAD,CAAiB/C,KAAK,WAE7C,kBAACoD,EAAA,EAASC,KAAV,CAAepD,QAfA,WACjB9B,ETiDK,CACLL,KAAML,ISjDNuF,GAAW,KAcP,kBAAC,IAAD,CAAiBhD,KAAK,kBADxB,cACmD,KACpC,IAAZ+C,GAAqB,kBAAC,IAAD,CAAiB/C,KAAK,aCdrCsD,EAbK,WAClB,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC/C,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,kBAAC4C,EAAD,OAEF,kBAAChD,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAC3B,kBAAC6C,EAAD,S,iCCAFjC,EAAY,CAChB,CAAEvC,GAAIyE,MAAQpF,KAAM,iBAAUG,QAAQ,GACtC,CAAEQ,GAAIyE,MAAQpF,KAAM,oBAAWG,QAAQ,GACvC,CAAEQ,GAAIyE,MAAQpF,KAAM,WAAYG,QAAQ,GACxC,CAAEQ,GAAIyE,MAAQpF,KAAM,mBAAUG,QAAQ,IAG3BkF,EAAe,CAC1BrD,QAAQ,EACRsD,QAAQ,EACRrF,MAAOoB,KAAKC,MAAMiE,aAAaC,QAAQ,WAAatC,GAGvC,SAASuC,EAAaxD,EAAOyD,GAC1C,OAAQA,EAAOlG,MACb,KAAKV,EACH,OAAO,eACFmD,EADL,CAEEqD,QAAQ,EACRrF,MAAM,GAAD,mBACAgC,EAAMhC,OADN,CAEH,CAAEU,GAAIyE,MAAQpF,KAAM0F,EAAO1F,KAAMG,OAAQuF,EAAOvF,YAItD,KAAKpB,EACH,OAAO,eACFkD,EADL,CAEEqD,QAAQ,EACRtD,QAAQ,EACR/B,MAAOgC,EAAMhC,MAAMuD,QAAO,SAAAxD,GAAI,OAAIA,EAAKW,KAAO+E,EAAO/E,QAGzD,KAAK3B,EACH,OAAO,eACFiD,EADL,CAEEqD,QAAQ,EACRtD,QAAQ,EACR/B,MAAOgC,EAAMhC,MAAMkD,KAAI,SAAAnD,GACrB,OAAIA,EAAKW,KAAO+E,EAAO1F,KAAKW,GACnB+E,EAAO1F,KAETA,OAIb,KAAKd,EACH,IAAIyG,EAAW,YAAO1D,EAAMhC,OAE5B,OADA0F,EAAYC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE7F,KAAK+F,cAAcD,EAAE9F,SAC3C,eACFiC,EADL,CAEEhC,MAAO0F,IAGX,KAAKxG,EACH,IAAI6G,EAAW,YAAO/D,EAAMhC,OAE5B,OADA+F,EAAYJ,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE9F,KAAK+F,cAAcF,EAAE7F,SAC3C,eACFiC,EADL,CAEEhC,MAAO+F,IAGX,KAAK/G,EACH,OAAO,eACFgD,EADL,CAEEhC,MAAOgC,EAAMhC,MAAMkD,KAAI,SAAAnD,GACrB,OAAIA,EAAKW,KAAO+E,EAAO/E,GACd,eAAKX,EAAZ,CAAkBG,QAASH,EAAKG,SAE3BH,OAIb,KAAKZ,EACH,OAAO,eAAK6C,EAAZ,CAAmBqD,QAASrD,EAAMqD,OAAQtD,QAAQ,IAEpD,KAAK3C,EACH,OAAO,eAAK4C,EAAZ,CAAmBqD,QAAQ,EAAOtD,QAAQ,IAE5C,KAAK1C,EACH,OAAO,eAAK2C,EAAZ,CAAmBqD,QAAQ,EAAMtD,QAAQ,IAE3C,QACE,OAAOC,G,MCpBEgE,MA9Df,WAAgB,IAAD,EACkBC,qBAAWT,EAAcJ,GAD3C,mBACNpD,EADM,KACCpC,EADD,OAEyBE,mBAAS,CAC7CY,GAAI,KACJX,KAAM,GACNG,QAAQ,IALG,mBAENL,EAFM,KAEOqG,EAFP,OAOiBpG,mBAAS,IAP1B,mBAONiE,EAPM,KAOGC,EAPH,KAQLqB,EAAkBrD,EAAlBqD,OAAQrF,EAAUgC,EAAVhC,MAEZiD,EAAYjD,EAuBhB,OArBI+D,IACFd,EAAYA,EAAUM,QAAO,SAAAxD,GAC3B,OAAOA,EAAKA,KAAKyD,cAAcC,SAASM,EAAQP,mBAWpDpD,qBAAU,WACRkF,aAAaa,QAAQ,QAAS/E,KAAKgF,UAAUpG,MAC5C,CAACA,IAOF,kBAACvB,EAAD,CACEuC,MAAO,CAAEpB,gBAAeoC,QAAOa,WAlBhB,SAAA9C,GACjBH,EAAcH,KACdyG,EAAenG,IAgB8BF,cAAaiE,aAdvC,SAAAC,GACnBC,EAAWD,MAeT,kBAACsC,EAAA,EAAD,KACE,yBAAK/E,UAAU,eACb,iEACA,8BAEF,kBAAC0D,EAAA,EAAD,KACGK,GAAU,kBAAC,EAAD,MACX,kBAACpD,EAAA,EAAD,CACEqE,GAAKjB,EAAgB,IAAP,KACdlD,GAAKkD,EAAgB,IAAP,KACdjD,GAAKiD,EAAgB,IAAP,KACdhD,GAAKgD,EAAgB,IAAP,MAEd,kBAAC9D,EAAA,EAAD,CAAQhC,KAAK,SAASiC,QAAQ,UAAUE,QArB7B,WACnB9B,EAAcN,OAqBJ,kBAAC,IAAD,CAAiBmC,KAAK,SADxB,8BAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWwB,UAAWA,S,0BCvDlCsD,IAAQC,IACNC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,M,YCVkBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e6f14b1a.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\n\r\nexport const TasksContext = createContext(null);\r\n\r\nexport default function TasksContextProvider({ children, ...props }) {\r\n  return <TasksContext.Provider {...props}>{children}</TasksContext.Provider>;\r\n}\r\n","// TASK\r\n\r\nexport const ADD_TASK = \"ADD_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const EDIT_TASK = \"EDIT_TASK\";\r\n\r\n// STATUS\r\nexport const UPDATE_STATUS = \"UPDATE_STATUS\";\r\n\r\n// EVENT\r\n\r\nexport const A_TO_Z = \"A_TO_Z\";\r\nexport const Z_TO_A = \"Z_TO_A\";\r\nexport const TOGGLE_FORM = \"TOGGLE_FORM\";\r\nexport const CLOSE_FORM = \"CLOSE_FORM\";\r\nexport const EDIT_FORM = \"EDIT_FORM\";\r\n","import {\r\n  ADD_TASK,\r\n  DELETE_TASK,\r\n  EDIT_TASK,\r\n  UPDATE_STATUS,\r\n  CLOSE_FORM,\r\n  TOGGLE_FORM,\r\n  EDIT_FORM,\r\n  A_TO_Z,\r\n  Z_TO_A\r\n} from \"../constants/ActionTypes\";\r\n\r\nexport const addTask = (task, status) => {\r\n  return {\r\n    type: ADD_TASK,\r\n    task: task,\r\n    status: status\r\n  };\r\n};\r\n\r\nexport const deleteTask = taskId => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    id: taskId\r\n  };\r\n};\r\n\r\nexport const editTask = task => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    task: task\r\n  };\r\n};\r\n\r\nexport const updateStatus = taskId => {\r\n  return {\r\n    type: UPDATE_STATUS,\r\n    id: taskId\r\n  };\r\n};\r\n\r\nexport const toggleForm = () => {\r\n  return {\r\n    type: TOGGLE_FORM\r\n  };\r\n};\r\n\r\nexport const closeForm = () => {\r\n  return {\r\n    type: CLOSE_FORM\r\n  };\r\n};\r\n\r\nexport const editForm = () => {\r\n  return {\r\n    type: EDIT_FORM\r\n  };\r\n};\r\n\r\nexport const aToZ = () => {\r\n  return {\r\n    type: A_TO_Z\r\n  };\r\n};\r\n\r\nexport const zToA = () => {\r\n  return {\r\n    type: Z_TO_A\r\n  };\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { TasksContext } from \"../../../context/TaskContext\";\r\nimport { editTask, closeForm } from \"../../../actions/tasks\";\r\n\r\nconst EditTaskForm = () => {\r\n  const { dispatchTasks,currentTask } = useContext(TasksContext);\r\n  const [tasks, setTasks] = useState(currentTask.task);\r\n  const [status, setStatus] = useState(currentTask.status);\r\n\r\n  const handleSubmit = e => {\r\n    if (tasks) {\r\n      e.preventDefault();\r\n      const editTasks = {\r\n        task: tasks,\r\n        status: status,\r\n        id: currentTask.id\r\n      };\r\n      dispatchTasks(editTask(editTasks));\r\n      //   dispatchTasks({ type: \"CLOSE_FORM\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTasks(currentTask.task);\r\n    setStatus(currentTask.status);\r\n  }, [currentTask.status, currentTask.task]);\r\n\r\n  const handleReset = () => {\r\n    setTasks(currentTask.task);\r\n    setStatus(currentTask.status);\r\n    dispatchTasks(closeForm());\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Tên :</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          required\r\n          value={tasks}\r\n          onChange={e => setTasks(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Trạng Thái :</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          required\r\n          value={status}\r\n          onChange={e => setStatus(JSON.parse(e.target.value))}\r\n        >\r\n          <option value=\"true\">Kích Hoạt</option>\r\n          <option value=\"false\">Ẩn</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <br />\r\n      <div className=\"text-center\">\r\n        <Button type=\"submit\" variant=\"warning\">\r\n          <FontAwesomeIcon icon=\"plus\" /> Lưu lại\r\n        </Button>\r\n        &nbsp;\r\n        <Button type=\"submit\" variant=\"danger\" onClick={handleReset}>\r\n          <FontAwesomeIcon icon=\"times\" /> Hủy Bỏ\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default EditTaskForm;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { TasksContext } from \"../../../context/TaskContext\";\r\nimport { addTask } from \"../../../actions/tasks\";\r\n\r\nconst AddTaskForm = () => {\r\n  const [task, setTask] = useState(\"\");\r\n  const [status, setStatus] = useState(false);\r\n  const { dispatchTasks } = useContext(TasksContext);\r\n\r\n  const handleSubmit = e => {\r\n    if (task) {\r\n      e.preventDefault();\r\n      dispatchTasks(addTask(task, status));\r\n      setTask(\"\");\r\n      setStatus(false);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setTask(\"\");\r\n    setStatus(false);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Tên :</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          required\r\n          value={task}\r\n          onChange={e => setTask(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Trạng Thái :</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          required\r\n          value={status}\r\n          onChange={e => setStatus(JSON.parse(e.target.value))}\r\n        >\r\n          <option value=\"true\">Kích Hoạt</option>\r\n          <option value=\"false\">Ẩn</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <br />\r\n      <div className=\"text-center\">\r\n        <Button type=\"submit\" variant=\"warning\">\r\n          <FontAwesomeIcon icon=\"plus\" /> Lưu lại\r\n        </Button>\r\n        &nbsp;\r\n        <Button type=\"submit\" variant=\"danger\" onClick={handleReset}>\r\n          <FontAwesomeIcon icon=\"times\" /> Hủy Bỏ\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n","import React, { useContext } from \"react\";\r\nimport { Col, Alert } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport EditTaskForm from \"./EditTaskForm\";\r\nimport AddTaskForm from \"./AddTaskForm\";\r\n\r\nimport { TasksContext } from \"../../../context/TaskContext\";\r\nimport { closeForm } from \"../../../actions/tasks\";\r\n\r\nconst TaskForm = () => {\r\n  const { dispatchTasks, state } = useContext(TasksContext);\r\n  const {isEdit} = state;\r\n\r\n  const handleCloseForm = () => {\r\n    dispatchTasks(closeForm());\r\n  };\r\n  return (\r\n    <Col xl=\"4\" sm=\"4\" md=\"4\" lg=\"4\" className=\"px5\">\r\n      <div>\r\n        <Alert variant=\"warning\">\r\n          <Alert.Heading as=\"h5\">\r\n            {isEdit ? \"Sửa Công Việc\" : \"Thêm Công Việc\"}\r\n            <span>\r\n              <FontAwesomeIcon\r\n                icon=\"times-circle\"\r\n                className=\"float-right\"\r\n                onClick={handleCloseForm}\r\n              />\r\n            </span>\r\n          </Alert.Heading>\r\n        </Alert>\r\n      </div>\r\n      {isEdit ? <EditTaskForm /> : <AddTaskForm />}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst TaskButton = ({\r\n  children,\r\n  isEdit,\r\n  size = \"sm\",\r\n  variant = \"primary\",\r\n  ...props\r\n}) => {\r\n  if (isEdit) {\r\n    return (\r\n      <Button variant={variant} disabled size={size} {...props}>\r\n        {children}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Button variant={variant} size={size} {...props}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default TaskButton;\r\n","import React, { useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport TaskButton from \"./Button\";\r\n\r\nimport { TasksContext } from \"../../context/TaskContext\";\r\nimport { deleteTask, updateStatus } from \"../../actions/tasks\";\r\n\r\nconst TaskItem = ({ task, index }) => {\r\n  const { dispatchTasks, onEditTask, state } = useContext(TasksContext);\r\n\r\n  const handleDeleteTask = () => {\r\n    dispatchTasks(deleteTask(task.id));\r\n  };\r\n\r\n  const handleUpdateStatus = () => {\r\n    dispatchTasks(updateStatus(task.id));\r\n  };\r\n\r\n  const handleEditTask = () => {\r\n    onEditTask(task);\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>{++index}</td>\r\n      <td>{task.task}</td>\r\n      <td className=\"text-center\">\r\n        {task.status ? (\r\n          <TaskButton\r\n            variant=\"danger\"\r\n            isEdit={state.isEdit}\r\n            onClick={handleUpdateStatus}\r\n          >\r\n            Kích Hoạt\r\n          </TaskButton>\r\n        ) : (\r\n          <TaskButton\r\n            variant=\"success\"\r\n            isEdit={state.isEdit}\r\n            onClick={handleUpdateStatus}\r\n          >\r\n            Ẩn\r\n          </TaskButton>\r\n        )}\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <TaskButton variant=\"warning\" onClick={handleEditTask} size=\"md\">\r\n          <FontAwesomeIcon icon=\"pencil-alt\" /> Sửa\r\n        </TaskButton>\r\n        &nbsp;\r\n        <TaskButton variant=\"danger\" onClick={handleDeleteTask} size=\"md\">\r\n          <FontAwesomeIcon icon={[\"far\", \"trash-alt\"]} /> Xóa\r\n        </TaskButton>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\n\r\nimport TaskItem from \"./Item\";\r\n\r\nconst TaskList = ({ tasksList }) => {\r\n  return (\r\n    <>\r\n      {tasksList.map((task, index) => (\r\n        <TaskItem key={task.id} index={index} task={task} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState } from \"react\";\r\nimport { Table, Form } from \"react-bootstrap\";\r\n\r\nimport TaskList from \"./List\";\r\n\r\nconst TaskTable = ({ tasksList }) => {\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  let filteredTask = tasksList;\r\n\r\n  if (value) {\r\n    filteredTask = filteredTask.filter(task => {\r\n      return task.task.toLowerCase().includes(value.toLowerCase());\r\n    });\r\n  }\r\n  filteredTask = filteredTask.filter(task => {\r\n    if (status === \"all\") {\r\n      return true;\r\n    }\r\n    if (status === \"active\" && task.status) {\r\n      return true;\r\n    }\r\n    if (status === \"hide\" && !task.status) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <Table bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th className=\"text-center\">STT</th>\r\n          <th className=\"text-center\">Tên</th>\r\n          <th className=\"text-center\">Trạng Thái</th>\r\n          <th className=\"text-center\">Hành Động</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td></td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              value={value}\r\n              onChange={e => setValue(e.target.value)}\r\n              className=\"form-control\"\r\n            />\r\n          </td>\r\n          <td>\r\n            <Form.Group>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={status}\r\n                onChange={e => setStatus(e.target.value)}\r\n              >\r\n                <option value=\"all\">Tất Cả</option>\r\n                <option value=\"active\">Kích Hoạt</option>\r\n                <option value=\"hide\">Ẩn</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n        <TaskList tasksList={filteredTask} />\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TaskTable;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { TasksContext } from \"../../../context/TaskContext\";\r\n\r\nconst TaskSearchControl = () => {\r\n  const { onSearchTask } = useContext(TasksContext);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const handleSearchTask = () => {\r\n    onSearchTask(keyword);\r\n  };\r\n  return (\r\n    <InputGroup className=\"mb-3\">\r\n      <FormControl\r\n        placeholder=\"Nhập từ khóa...\"\r\n        aria-label=\"Recipient's username\"\r\n        aria-describedby=\"basic-addon2\"\r\n        value={keyword}\r\n        onChange={e => setKeyword(e.target.value)}\r\n      />\r\n      <InputGroup.Append>\r\n        <Button variant=\"primary\" type=\"button\" onClick={handleSearchTask}>\r\n          <FontAwesomeIcon icon=\"search\" /> Tìm\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nexport default TaskSearchControl;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { TasksContext } from \"../../../context/TaskContext\";\r\nimport { aToZ, zToA } from \"../../../actions/tasks\";\r\n\r\nconst TaskSortControl = () => {\r\n  const { dispatchTasks } = useContext(TasksContext);\r\n  const [isCheck, setIsCheck] = useState(null);\r\n\r\n  const ascending = () => {\r\n    dispatchTasks(aToZ());\r\n    setIsCheck(true);\r\n  };\r\n\r\n  const descending = () => {\r\n    dispatchTasks(zToA());\r\n    setIsCheck(false);\r\n  };\r\n\r\n  return (\r\n    <DropdownButton\r\n      id=\"dropdown-basic-button\"\r\n      title=\"Sắp sếp\"\r\n      data-toggle=\"dropdown\"\r\n    >\r\n      <Dropdown.Item onClick={ascending}>\r\n        <FontAwesomeIcon icon=\"sort-alpha-down\" /> Tên A-Z{\" \"}\r\n        {isCheck === true && <FontAwesomeIcon icon=\"check\" />}\r\n      </Dropdown.Item>\r\n      <Dropdown.Item onClick={descending}>\r\n        <FontAwesomeIcon icon=\"sort-alpha-up\" /> Tên Z-A{\" \"}\r\n        {isCheck === false && <FontAwesomeIcon icon=\"check\" />}\r\n      </Dropdown.Item>\r\n    </DropdownButton>\r\n  );\r\n};\r\n\r\nexport default TaskSortControl;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\n\r\nconst TaskControl = () => {\r\n  return (\r\n    <Row>\r\n      <Col xl=\"6\" sm=\"6\" md=\"6\" lg=\"6\">\r\n        <Search />\r\n      </Col>\r\n      <Col xl=\"6\" sm=\"6\" md=\"6\" lg=\"6\">\r\n        <Sort />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TaskControl;\r\n","import {\r\n  ADD_TASK,\r\n  DELETE_TASK,\r\n  EDIT_TASK,\r\n  UPDATE_STATUS,\r\n  CLOSE_FORM,\r\n  TOGGLE_FORM,\r\n  EDIT_FORM,\r\n  A_TO_Z,\r\n  Z_TO_A\r\n} from \"../constants/ActionTypes\";\r\nimport uuid from \"uuid/v4\";\r\n\r\nconst tasksList = [\r\n  { id: uuid(), task: \"Đi làm\", status: true },\r\n  { id: uuid(), task: \"Đi chơi\", status: false },\r\n  { id: uuid(), task: \"Xem phim\", status: true },\r\n  { id: uuid(), task: \"Đi ngủ\", status: true }\r\n];\r\n\r\nexport const initialState = {\r\n  isEdit: false,\r\n  isShow: false,\r\n  tasks: JSON.parse(localStorage.getItem(\"tasks\")) || tasksList\r\n};\r\n\r\nexport default function tasksReducer(state, action) {\r\n  switch (action.type) {\r\n    case ADD_TASK:\r\n      return {\r\n        ...state,\r\n        isShow: false,\r\n        tasks: [\r\n          ...state.tasks,\r\n          { id: uuid(), task: action.task, status: action.status }\r\n        ]\r\n      };\r\n\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        isShow: false,\r\n        isEdit: false,\r\n        tasks: state.tasks.filter(task => task.id !== action.id)\r\n      };\r\n\r\n    case EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        isShow: false,\r\n        isEdit: false,\r\n        tasks: state.tasks.map(task => {\r\n          if (task.id === action.task.id) {\r\n            return action.task;\r\n          }\r\n          return task;\r\n        })\r\n      };\r\n\r\n    case A_TO_Z:\r\n      let AZsortState = [...state.tasks];\r\n      AZsortState.sort((a, b) => a.task.localeCompare(b.task));\r\n      return {\r\n        ...state,\r\n        tasks: AZsortState\r\n      };\r\n\r\n    case Z_TO_A:\r\n      let ZAsortState = [...state.tasks];\r\n      ZAsortState.sort((a, b) => b.task.localeCompare(a.task));\r\n      return {\r\n        ...state,\r\n        tasks: ZAsortState\r\n      };\r\n\r\n    case UPDATE_STATUS:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(task => {\r\n          if (task.id === action.id) {\r\n            return { ...task, status: !task.status };\r\n          }\r\n          return task;\r\n        })\r\n      };\r\n\r\n    case TOGGLE_FORM:\r\n      return { ...state, isShow: !state.isShow, isEdit: false };\r\n\r\n    case CLOSE_FORM:\r\n      return { ...state, isShow: false, isEdit: false };\r\n\r\n    case EDIT_FORM:\r\n      return { ...state, isShow: true, isEdit: true };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useReducer, useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport TaskForm from \"./components/Task/Form/Form\";\r\nimport TaskTable from \"./components/Task/Table\";\r\nimport TaskControl from \"./components/Task/Controls\";\r\n\r\nimport TasksContextProvider from \"./context/TaskContext\";\r\nimport tasksReducer, { initialState } from \"./reducers/tasks\";\r\nimport { toggleForm, editForm } from \"./actions/tasks\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [state, dispatchTasks] = useReducer(tasksReducer, initialState);\r\n  const [currentTask, setCurrentTask] = useState({\r\n    id: null,\r\n    task: \"\",\r\n    status: true\r\n  });\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const { isShow, tasks } = state;\r\n\r\n  let tasksList = tasks;\r\n\r\n  if (keyword) {\r\n    tasksList = tasksList.filter(task => {\r\n      return task.task.toLowerCase().includes(keyword.toLowerCase());\r\n    });\r\n  }\r\n  const onEditTask = task => {\r\n    dispatchTasks(editForm());\r\n    setCurrentTask(task);\r\n  };\r\n  const onSearchTask = keyword => {\r\n    setKeyword(keyword);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const handleToggle = () => {\r\n    dispatchTasks(toggleForm());\r\n  };\r\n\r\n  return (\r\n    <TasksContextProvider\r\n      value={{ dispatchTasks, state, onEditTask, currentTask, onSearchTask }}\r\n    >\r\n      <Container>\r\n        <div className=\"text-center\">\r\n          <h1>Quản Lý Công Việc</h1>\r\n          <hr />\r\n        </div>\r\n        <Row>\r\n          {isShow && <TaskForm />}\r\n          <Col\r\n            xs={!isShow ? \"12\" : \"8\"}\r\n            sm={!isShow ? \"12\" : \"8\"}\r\n            md={!isShow ? \"12\" : \"8\"}\r\n            lg={!isShow ? \"12\" : \"8\"}\r\n          >\r\n            <Button type=\"button\" variant=\"primary\" onClick={handleToggle}>\r\n              <FontAwesomeIcon icon=\"plus\" /> Thêm Công Việc\r\n            </Button>\r\n            <TaskControl />\r\n            <TaskTable tasksList={tasksList} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </TasksContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faPencilAlt,\r\n  faSearch,\r\n  faPlus,\r\n  faTimes,\r\n  faTimesCircle,\r\n  faSortAlphaUp,\r\n  faSortAlphaDown,\r\n  faCheck\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nlibrary.add(\r\n  faPencilAlt,\r\n  faSearch,\r\n  faPlus,\r\n  faTimes,\r\n  faTimesCircle,\r\n  faSortAlphaUp,\r\n  faSortAlphaDown,\r\n  faTrashAlt,\r\n  faCheck\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./fontawesome\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";  \nimport \"./index.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}